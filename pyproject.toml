[project]
name = "apex"
version = "1.0.0"
description = "Adversarial Pair Execution - Orchestrate Claude agents for robust code generation"
authors = [{name = "APEX Team", email = "wave@nibzard.com"}]
readme = "README.md"
license = {text = "Apache-2.0"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Testing",
]

dependencies = [
    # Core
    "lmdb>=1.4.0",               # Memory store
    "msgpack>=1.0.0",            # Efficient serialization
    "pydantic>=2.5.0",           # Data validation

    # CLI/TUI
    "typer[all]>=0.12.0",        # CLI framework
    "textual>=0.41.0",           # TUI framework
    "rich>=13.0.0",              # Rich text formatting
    "prompt-toolkit>=3.0.0",     # Interactive prompts

    # Async & Process Management
    "aiofiles>=23.0.0",
    "psutil>=5.9.0",             # Process monitoring

    # Git Integration
    "gitpython>=3.1.0",          # Git operations
    "pygithub>=2.1.0",           # GitHub API

    # MCP
    "mcp>=1.0.0",                # Model Context Protocol

    # Monitoring & Logging
    "structlog>=23.0.0",         # Structured logging
    "prometheus-client>=0.19.0", # Metrics
    "opentelemetry-api>=1.20.0", # Distributed tracing

    # Utilities
    "toml>=0.10.0",              # Config files
    "watchdog>=3.0.0",           # File watching
    "httpx>=0.25.0",             # HTTP client
    "python-dotenv>=1.0.0",      # Environment management
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-benchmark>=4.0.0",

    # Code Quality
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",

    # Development Tools
    "ipython>=8.18.0",
    "ipdb>=0.13.0",
    "pytest-xdist>=3.5.0",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.scripts]
apex = "apex.cli:main"

[project.urls]
Homepage = "https://github.com/nibzard/apex"
Documentation = "https://apex.readthedocs.io"
Repository = "https://github.com/nibzard/apex"
Issues = "https://github.com/nibzard/apex/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
include = [
    "src/apex/**/*.py",
    "src/apex/**/*.toml",
    "templates/**/*",
]

[tool.uv]
dev-dependencies = [
    "ipython>=8.18.0",
    "pytest-xdist>=3.5.0",
]

[tool.black]
line-length = 88
target-version = ['py311']

[tool.ruff]
line-length = 88
select = ["E", "F", "I", "N", "W", "B", "C90", "D"]
ignore = ["D100", "D104"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
addopts = "--cov=apex --cov-report=html --cov-report=term-missing"

[tool.coverage.run]
source = ["src/apex"]
omit = ["*/tests/*", "*/__main__.py"]
